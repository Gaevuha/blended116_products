{"version":3,"file":"index.js","sources":["../src/js/products-api.js","../src/js/refs.js","../src/js/storage.js","../src/js/modal.js","../src/js/handlers.js","../src/js/render-function.js","../src/home.js"],"sourcesContent":["// src/js/products-api.js\n\n// Функції для роботи з бекендом\nimport axios from 'axios';\n// Функція для отримання категорій продуктів\nexport async function fetchProductCategories() {\n    const API_URL_CATEGORY = 'https://dummyjson.com/products/category-list';\n  try {\n    const response = await axios.get(API_URL_CATEGORY);\n    return response.data; // повертає масив категорій\n  } catch (error) {\n    console.error('Помилка під час отримання категорій:', error.message);\n    throw error;\n  }\n}\n// Функція для отримання продуктів за категорією\nexport async function fetchProductsByCategory(category) {\n    // Встановлюємо поточну сторінку (статично — завжди 1)\n    const currentPage = 1;\n\n    // Формуємо URL для отримання 12 продуктів зі зміщенням відповідно до сторінки (skip = 0)\n    const API_URL_PRODUCTS = `https://dummyjson.com/products/category/${category}?limit=12&skip=${(currentPage - 1) * 12}`;\n\n    try {\n        // Виконуємо GET-запит до API\n        const response = await axios.get(API_URL_PRODUCTS);\n\n        // Повертаємо тільки масив продуктів із відповіді\n        return response.data.products;\n\n    } catch (error) {\n        // Якщо сталася помилка — виводимо повідомлення\n        console.error('Помилка під час отримання продуктів:', error.message);\n\n        // Передаємо помилку далі\n        throw error;\n    }\n}\n// Функція для отримання всіх продуктів\nexport async function fetchAllProducts() {\n    // Встановлюємо поточну сторінку (статично — завжди 1)\n    const currentPage = 1;\n\n    // Формуємо URL для отримання 12 продуктів зі зміщенням відповідно до сторінки (skip = 0)\n    const API_URL_PRODUCTS = `https://dummyjson.com/products?limit=12&skip=${(currentPage - 1) * 12}`;\n\n    try {\n        // Виконуємо GET-запит до API\n        const response = await axios.get(API_URL_PRODUCTS);\n\n        // Повертаємо тільки масив продуктів із відповіді\n        return response.data.products;\n\n    } catch (error) {\n        // Якщо сталася помилка — виводимо повідомлення\n        console.error('Помилка під час отримання продуктів:', error.message);\n\n        // Передаємо помилку далі\n        throw error;\n    }\n}\n// Функція для отримання продуктів за ID\nexport async function fetchProductById(id) {\n  const response = await fetch(`https://dummyjson.com/products/${id}`);\n  if (!response.ok) throw new Error('Failed to fetch product');\n  return await response.json();\n}\n// Функція для пошуку продуктів за назвою\nexport async function searchProductsByName(query) {\n  const API_URL = `https://dummyjson.com/products/search?q=${encodeURIComponent(query)}&limit=12`;\n\n  try {\n    const response = await axios.get(API_URL);\n    return response.data.products;\n  } catch (error) {\n    console.error('Помилка під час пошуку продуктів:', error.message);\n    throw error;\n  }\n}\n","// File: src/js/refs.js\n\n//Обʼєкт з посиланнями на ДОМ елементи\n\nexport const refs = {\n    formEl: document.querySelector('.search-form'),\n    inputEl: document.querySelector('.search-form__input'),\n    clearSearchBtnEl: document.querySelector('.search-form__btn-clear'),\n    searchBtnEl: document.querySelector('.search-form__btn'),\n    categoriesListEl: document.querySelector('.categories'),\n    productsListEl: document.querySelector('.products'),\n    loadMoreBtn: document.querySelector('.btn'),\n    loaderEl: document.querySelector('.loader'),\n    modalEl: document.querySelector('.modal'),\n    modalCloseBtnEl: document.querySelector('.modal__close-btn'),\n    modalContentEl: document.querySelector('.modal__content'),\n    modalOverlayEl: document.querySelector('.modal__overlay'),\n    notFound: document.querySelector('.not-found'),\n};\n","//Робота з loacalStorage\n// js/cards-storage.js\n\n// cards-storage.js\nexport let cards = [];\n\nexport function saveCardsToStorage() {\n  localStorage.setItem('cards', JSON.stringify(cards));\n}\n\nexport function loadCardsFromStorage() {\n  const saved = localStorage.getItem('cards');\n  if (saved) {\n    cards = JSON.parse(saved);\n  }\n}\n\n","// modal.js\n\n//Описана робота модалки - відкриття закриття і все що з модалкою повʼязано\n// modal.js\n\nimport { refs } from \"./refs\";\nimport { renderModalProduct } from \"./render-function\";\n\n\n// Відкрити модалку\nexport function openModal(product) {\n  renderModalProduct(product);\n  refs.modalEl.classList.add('modal--is-open');\n}\n\n// Закрити модалку\nexport function closeModal() {\n  refs.modalEl.classList.remove('modal--is-open');\n  // Очищаємо тільки вміст .modal-product\n  const modalProductContainer = refs.modalContentEl.querySelector('.modal-product');\n  if (modalProductContainer) {\n    modalProductContainer.innerHTML = '';\n  }\n}\n\n// === 👇 Додай ось цей код прямо після функцій ===\n\n// Закриття по кліку на кнопку або на оверлей\nrefs.modalEl.addEventListener('click', (e) => {\n  if (e.target.classList.contains('modal__close-btn') || e.target === refs.modalEl) {\n    closeModal();\n  }\n});\n\n// Закриття по клавіші Esc\ndocument.addEventListener('keydown', (e) => {\n  if (e.key === 'Escape') {\n    closeModal();\n  }\n});\n","// js/handlers.js\n\n// Функції, які передаються колбеками в addEventListners\n\nimport { openModal } from './modal.js';\nimport { cards } from './storage.js';\nimport { refs } from './refs.js';\n\n// Показ повідомлення \"не знайдено\"\nexport function showNotFoundMessage() {\n    const notFound = document.querySelector('.not-found');\n    if (notFound) {\n      notFound.classList.add('not-found--visible');\n    }\n  }\n// Сховати повідомлення \"не знайдено\" \n  export function hideNotFoundMessage() {\n    const notFound = document.querySelector('.not-found');\n    if (notFound) {\n      notFound.classList.remove('not-found--visible');\n    }\n  }  \n  // Функція для відображення кнопки \nexport function showLoadMoreBtn() {\n    if (refs.loadMoreBtn) {\n        refs.loadMoreBtn.classList.remove('is-hidden');\n        refs.loadMoreBtn.classList.add('is-visible');\n    }\n}\n// Функція для приховування кнопки \nexport function hideLoadMoreBtn() {\n    if (refs.loadMoreBtn) {\n        refs.loadMoreBtn.classList.add('is-hidden');\n        refs.loadMoreBtn.classList.remove('is-visible');\n    }\n}\n// Функція для відображення лоадера\nexport function showLoader() {\n    const loader = document.querySelector('.loader');\n    if (loader) {\n      loader.classList.remove('is-hidden');\n      loader.classList.add('is-visible');\n    }\n  }\n  // Функція для приховування лоадера\n  export function hideLoader() {\n    const loader = document.querySelector('.loader');\n    if (loader) {\n      loader.classList.add('is-hidden');\n      loader.classList.remove('is-visible');\n    }\n  }\n// Функція для очищення розмітки продуктів та відображення лоадера\nexport function showPageLoader() {\n  document.querySelectorAll('.loader-page').forEach(loader => {\n    loader.classList.remove('is-hidden');\n    loader.classList.add('is-visible');\n  });\n}\n// Функція для приховування лоадера\nexport function hidePageLoader() {\n  document.querySelectorAll('.loader-page').forEach(loader => {\n    loader.classList.add('is-hidden');\n    loader.classList.remove('is-visible');\n  });\n}\n// Функція для обробки кліка на картку продукту\nexport function onProductCardClick(e) {\n    const card = e.target.closest('.products__item');\n    if (!card) return;\n  \n    const productId = card.dataset.id;\n    const product = cards.find(p => p.id === Number(productId));\n  \n    if (product) {\n      openModal(product);\n    }\n  }","// src/js/render-function.js\n\nimport { fetchProductCategories, fetchAllProducts } from './products-api.js';\nimport { refs } from './refs.js';\nimport { cards } from './storage.js';\nimport { openModal } from './modal.js';\nimport {\n  onProductCardClick,\n  showLoadMoreBtn,\n  hideLoader,\n} from './handlers.js';\n\nconsole.log(refs);\n//Функції для створення, рендеру або видалення розмітки\nconst listProducts = document.querySelector('.products');\n// Функція для створення розмітки категорій\nexport function createMarkupCategories(categories) {\n    return categories\n        .map(category => {\n            return `<li class=\"categories__item\">\n   <button class=\"categories__btn\" type=\"button\" data-category=\"${category}\">${category}</button>\n </li>\n`\n        }).join('');\n}\n// Функція для створення розмітки продуктів\nexport function createMarkupProducts(products) {\n    return products\n        .map(product => {\n            return `<li class=\"products__item\" data-id=\"${product.id}\">\n                  <img class=\"products__image\" src=\"${product.thumbnail}\" alt=\"${product.title}\"/>\n                   <p class=\"products__title\">${product.title}</p>\n                    <p class=\"products__brand\"><span class=\"products__brand--bold\">Brand: </span>${product.brand}</p>\n                    <p class=\"products__category\">Category: ${product.category}</p>\n                    <p class=\"products__price\">Price: ${product.price} $</p>\n </li>\n`   }).join('');\n}\n// Функція для ініціалізації сторінки\nexport async function initPage() {\n  // Сховати список категорій та продуктів перед завантаженням\n  refs.categoriesListEl.classList.add('hidden');\n  refs.productsListEl.classList.add('hidden');\n\n  // Сховати блок \"not-found\", якщо він був показаний раніше\n  document.querySelector('.not-found').classList.add('is-hidden');\n\n\n  try {\n    // Отримати список категорій з API\n    const categories = await fetchProductCategories();\n\n    // Отримати список всіх продуктів (наприклад, перших 12 або всі, залежно від реалізації)\n    const products = await fetchAllProducts();\n\n    // Створити HTML-розмітку для списку категорій\n    const categoriesMarkup = createMarkupCategories(categories);\n\n    // Створити HTML-розмітку для списку продуктів\n    const productsMarkup = createMarkupProducts(products);\n\n    // Отримати посилання на DOM-елементи списків\n    const categoriesList = document.querySelector('.categories');\n    const productsList = document.querySelector('.products');\n\n    // Додати HTML категорій до списку на сторінці\n    categoriesList.insertAdjacentHTML('beforeend', categoriesMarkup);\n\n    // Якщо масив продуктів порожній:\n    if (products.length === 0) {\n      // Показати блок \"No Products Found\"\n      document.querySelector('.not-found').classList.remove('is-hidden');\n    } else {\n      // Якщо продукти є — вставити HTML до DOM\n      productsList.insertAdjacentHTML('beforeend', productsMarkup);\n\n      // Показати список продуктів\n      refs.productsListEl.classList.remove('hidden');\n    }\n    showLoadMoreBtn();// Показати кнопку \"Load more\"\n    \n    // Показати список категорій\n    refs.categoriesListEl.classList.remove('hidden');\n\n    //  Додати делегування подій на картки\n    productsList.addEventListener('click', e => {\n    const card = e.target.closest('.product-card');\n    if (!card) return;\n\n    const id = card.dataset.id;\n    if (!id) return;\n\n      openModal(id);\n      \n});\n\n  } catch (error) {\n    // Вивести помилку у консоль, якщо щось пішло не так при запиті\n    console.error('Помилка при ініціалізації сторінки:', error.message);\n  } finally {\n    // У будь-якому випадку — сховати спінер\n    hideLoader();\n  }\n}\n\n// Функція для очищення розмітки продуктів\nexport function clearMarkupProducts() {\n    listProducts.innerHTML = '';\n}\n// Функція додавання елементів на сторінку по кліку на кнопку 'Load more'\nexport async function addLoadMoreProducts(products) {\n    try {\n        const products = await fetchAllProducts();\n        const markup = createMarkupProducts(products);\n        listProducts.insertAdjacentHTML('beforeend', markup);\n    } catch (error) {\n        console.error('Error fetching products:', error.message);\n    }\n}\n\n// refs.productsListEl.addEventListener('click', (e) => {\n//   const card = e.target.closest('.products__item');\n//   if (!card) return;\n\n//   const productId = card.dataset.id;\n//   const product = cards.find(p => p.id === Number(productId)); // отримуємо продукт за ID\n\n//   if (product) {\n//     openModal(product); // передаємо продукт до модалки\n//   }\n// });\n// Функція для рендерингу карток з localStorage\nexport async function renderCardsFromStorage() {\n    if (cards.length > 0) {\n        const markup = createMarkupProducts(cards);\n        refs.productsListEl.insertAdjacentHTML('beforeend', markup);\n        showLoadMoreBtn();\n    }\n}\n\n// Функція для рендерингу продукту в модальному вікні\nexport async function renderModalProduct(product) {\n  const {\n    images,\n    title,\n    description,\n    tags,\n    shippingInformation,\n    returnPolicy,\n    price,\n  } = product;\n\n  //шукаємо контейнер для модального продукту\n   const modalProductContainer = refs.modalContentEl.querySelector('.modal-product');\n  if (!modalProductContainer) {\n    console.warn('Element .modal-product not found');\n    return;\n  }\n\n  // Оновлюємо лише вміст .modal-product\n  modalProductContainer.innerHTML = `\n    <img class=\"modal-product__img\" src=\"${images[0]}\" alt=\"${title}\" />\n    <div class=\"modal-product__content\">\n      <p class=\"modal-product__title\">${title}</p>\n      <ul class=\"modal-product__tags\">${tags?.map(tag => `<li>${tag}</li>`).join('')}</ul>\n      <p class=\"modal-product__description\">${description}</p>\n      <p class=\"modal-product__shipping-information\">Shipping: ${shippingInformation || \"Not specified\"}</p>\n      <p class=\"modal-product__return-policy\">Return Policy: ${returnPolicy || \"Not specified\"}</p>\n      <p class=\"modal-product__price\">Price: ${price}$</p>\n      <button class=\"modal-product__buy-btn\" type=\"button\">Buy</button>\n    </div>\n  `;\n}\n\n// refs.productsListEl.addEventListener('click', onProductCardClick);\n\nexport function addCardClickListener() {\n  if (refs.productsListEl) {\n    refs.productsListEl.addEventListener('click', onProductCardClick);\n  } else {\n    console.warn('refs.productsListEl не знайдено');\n  }\n}\n","// src/js/home.js\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport {\n    fetchProductsByCategory,\n    fetchAllProducts,\n    fetchProductById,\n    searchProductsByName\n} from './js/products-api.js';\nimport {   \n    createMarkupProducts,\n    clearMarkupProducts,\n    initPage,\n  addLoadMoreProducts,\n  addCardClickListener\n} from \"./js/render-function\";\nimport { refs } from './js/refs.js';\nimport { cards, saveCardsToStorage } from './js/storage.js';\nimport { openModal } from './js/modal.js';\nimport {\n  showNotFoundMessage,\n  hideNotFoundMessage,\n  showLoadMoreBtn,\n  hideLoadMoreBtn,\n  showLoader,\n  hideLoader,\n  showPageLoader,\n  hidePageLoader\n} from './js/handlers.js';\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  showPageLoader();\n\n  await new Promise(resolve => setTimeout(resolve, 100));\n\n  try {\n    await initPage();          // ✅ єдиний правильний виклик\n    addCardClickListener();    // ✅ після завершення initPage()\n  } catch (error) {\n    console.error('Помилка під час ініціалізації сторінки:', error.message);\n  } finally {\n    hidePageLoader();\n    document.getElementById('content').classList.remove('is-hidden');\n  }\n});\n\n\n\n// Змінна для збереження поточного пошукового запиту\nlet currentQuery = '';\n\n// Змінна для відстеження поточної сторінки при пагінації\nlet currentPage = 1;\n\n// Кількість продуктів, які будуть завантажені на одну сторінку\nconst IMAGES_PER_PAGE = 12;\n\n \n\n// Додаємо обробник події на категорії\nrefs.categoriesListEl.addEventListener('click', async (e) => {\n    if (e.target === e.currentTarget) return\n    // Отримуємо ID категорії з атрибута data-id\n    const categoryName = e.target.dataset.category;\n\n    // Якщо ID не вказано — виходимо з функції\n    if (!categoryName) return;\n\n  // Додаємо/знімаємо клас активної кнопки\n    const categoryButtons = refs.categoriesListEl.querySelectorAll('.categories__btn');\n    categoryButtons.forEach(btn => btn.classList.remove('categories__btn--active'));\n    e.target.classList.add('categories__btn--active');\n    // Скидаємо номер сторінки на 1\n    currentPage = 1;\n\n    // Якщо запит валідний:\n    clearMarkupProducts();  \n    hideLoadMoreBtn();\n    showLoader();\n    try {\n        const products = await fetchProductsByCategory(categoryName);\n\n        if (products.length === 0) {\n            iziToast.error({\n                title: 'Error',\n                message: 'No products found in this category.',\n                position: 'topCenter',\n            });\n            hideLoader();\n            return;\n        }\n            cards.length = 0;\n            cards.push(...products);\n            saveCardsToStorage();\n\n\n         // Якщо продукти знайдені — створюємо HTML-розмітку\n        const markup = createMarkupProducts(products);\n\n        // Вставляємо згенеровану розмітку в DOM\n        refs.productsListEl.insertAdjacentHTML('beforeend', markup);\n\n        // Показуємо кнопку \"Load More\" для завантаження наступної сторінки\n        showLoadMoreBtn();\n\n    } catch (error) {\n        console.error('Error fetching products:', error.message);\n    } finally {\n        hideLoader(); // Ховаємо анімацію завантаження\n    }\n});\n// Обробник події submit форми пошуку\nrefs.formEl.addEventListener('submit', async (e) => {\n  e.preventDefault(); // Скасовуємо перезавантаження сторінки при відправці форми\n\n  const query = refs.inputEl.value.trim(); // Отримуємо та обрізаємо значення з поля вводу\n\n  // Якщо поле порожнє — показуємо повідомлення про помилку\n  if (!query) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please enter a search query.',\n      position: 'topCenter',\n    });\n    return; // Вихід із функції\n  }\n\n  clearMarkupProducts(); // Очищаємо попередні результати на сторінці\n  hideLoadMoreBtn();     // Приховуємо кнопку \"Load More\"\n  showLoader();          // Показуємо анімацію завантаження (спінер)\n\n  try {\n    // Шукаємо товари за введеним запитом\n    const products = await searchProductsByName(query);\n\n   \n    // Якщо товари не знайдено — показуємо блок not-found\n    if (!products || products.length === 0) {\n      showNotFoundMessage();\n      return;\n    }\n\n    // Якщо знайдено — ховаємо блок not-found\n    hideNotFoundMessage();\n\n    // Очищаємо масив карток і додаємо нові\n    cards.length = 0;\n    cards.push(...products);\n    saveCardsToStorage(); // Зберігаємо картки у localStorage\n\n    // Створюємо HTML-розмітку з отриманих товарів\n    const markup = createMarkupProducts(products);\n\n    // Вставляємо розмітку в DOM (в кінець списку)\n    refs.productsListEl.insertAdjacentHTML('beforeend', markup);\n\n    // Показуємо кнопку \"Load More\"\n    showLoadMoreBtn();\n\n  } catch (error) {\n    // Якщо сталася помилка — виводимо її в консоль і показуємо повідомлення\n    console.error('Search error:', error.message);\n    iziToast.error({\n      title: 'Error',\n      message: 'Something went wrong. Please try again.',\n      position: 'topCenter',\n    });\n  } finally {\n    // Завжди ховаємо лоадер і очищаємо поле вводу\n    hideLoader();\n    refs.formEl.reset();\n  }\n});\n\n// Додаємо обробник події на кнопку \"Load More\"\nrefs.loadMoreBtn.addEventListener('click', async () => {\n  // Збільшуємо номер сторінки — це дозволяє завантажити наступну \"партію\" товарів\n  currentPage += 1;\n\n  // Показуємо індикатор завантаження\n    showLoader();\n    hideLoadMoreBtn();   \n\n  // Встановлюємо мінімальний час показу лоадера (2 секунди)\n  const startTime = Date.now();\n  const MIN_LOADER_TIME = 2000;\n\n  try {\n    // Отримуємо продукти за поточним запитом і сторінкою\n    const products = await fetchAllProducts(currentQuery, currentPage);\n\n    // Якщо нових продуктів немає, показуємо повідомлення і ховаємо кнопку\n    if (products.length === 0) {\n      iziToast.error({\n        title: 'Error',\n        message: 'No more products found.',\n        position: 'topCenter',\n      });\n      hideLoadMoreBtn();\n      return;\n    }\n\n    // Рендеримо продукти до DOM (ця функція має вставити нову порцію продуктів)\n    addLoadMoreProducts(products);\n\n  } catch (error) {\n    // Якщо сталася помилка — виводимо повідомлення\n    iziToast.error({\n      title: 'Error',\n      message: 'Failed to load products.',\n      position: 'topCenter',\n    });\n  } finally {\n    // Забезпечуємо мінімальний час відображення лоадера\n    const elapsedTime = Date.now() - startTime;\n    const remainingTime = MIN_LOADER_TIME - elapsedTime;\n\n    if (remainingTime > 0) {\n        setTimeout(() => {\n        showLoadMoreBtn();\n        hideLoader();\n      }, remainingTime);\n    } else {\n        hideLoader();\n        showLoadMoreBtn();\n    }\n  }\n});\n\n// Додаємо обробник події на кнопку очищення пошуку\nrefs.clearSearchBtnEl.addEventListener('click', () => {\n    // Очищаємо поле вводу\n    refs.inputEl.value = '';\n\n    // // Очищаємо список продуктів\n    // clearMarkupProducts();\n\n    // // Ховаємо кнопку \"Load More\"\n    // hideLoadMoreBtn();\n\n    // Скидаємо номер сторінки на 1\n    currentPage = 1;\n\n    // Показуємо повідомлення про очищення пошуку\n    iziToast.info({\n        title: 'Info',\n        message: 'Search cleared.',\n        position: 'topCenter',\n    });\n});\n\n// Додаємо обробник події для відкриття модального вікна з деталями продукту\nrefs.productsListEl.addEventListener('click', async (e) => {\n    const productCard = e.target.closest('.products__item');\n    if (!productCard) return;\n\n    const productId = productCard.dataset.id;\n    if (!productId) return;\n\n    try {\n        showLoader();\n        const product = await fetchProductById(productId);\n        openModal(product); // Показ модального вікна з деталями\n    } catch (error) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Failed to load product details.',\n            position: 'topCenter',\n        });\n        console.error('Error loading product:', error);\n    } finally {\n        hideLoader();\n    }\n});\n\n"],"names":["fetchProductCategories","API_URL_CATEGORY","axios","error","fetchProductsByCategory","category","API_URL_PRODUCTS","fetchAllProducts","fetchProductById","id","response","searchProductsByName","query","API_URL","refs","cards","saveCardsToStorage","openModal","product","renderModalProduct","closeModal","modalProductContainer","e","showNotFoundMessage","notFound","hideNotFoundMessage","showLoadMoreBtn","hideLoadMoreBtn","showLoader","loader","hideLoader","showPageLoader","hidePageLoader","onProductCardClick","card","productId","p","listProducts","createMarkupCategories","categories","createMarkupProducts","products","initPage","categoriesMarkup","productsMarkup","categoriesList","productsList","clearMarkupProducts","addLoadMoreProducts","markup","images","title","description","tags","shippingInformation","returnPolicy","price","tag","addCardClickListener","resolve","currentQuery","currentPage","categoryName","btn","iziToast","startTime","MIN_LOADER_TIME","elapsedTime","remainingTime","productCard"],"mappings":"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"}