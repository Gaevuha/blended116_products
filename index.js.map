{"version":3,"file":"index.js","sources":["../src/home.js"],"sourcesContent":["// src/js/home.js\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport {\n    fetchProductsByCategory,\n    fetchAllProducts,\n    fetchProductById,\n    searchProductsByName\n} from './js/products-api.js';\nimport {   \n    createMarkupProducts,\n    clearMarkupProducts,\n    initPage,\n    addLoadMoreProducts,\n    addCardClickListener\n} from \"./js/render-function\";\nimport { refs } from './js/refs.js';\nimport { cards, saveCardsToStorage, updateCartCount } from './js/storage.js';\nimport { openModal } from './js/modal.js';\nimport {\n  showNotFoundMessage,\n  hideNotFoundMessage,\n  showLoadMoreBtn,\n  hideLoadMoreBtn,\n  showLoader,\n  hideLoader,\n  showPageLoader,\n  hidePageLoader,\n} from './js/handlers.js';\n\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n  showPageLoader();\n  updateCartCount();\n\n  await new Promise(resolve => setTimeout(resolve, 100));\n\n  try {\n    await initPage();          // ✅ єдиний правильний виклик\n    addCardClickListener();    // ✅ після завершення initPage()\n  } catch (error) {\n    console.error('Помилка під час ініціалізації сторінки:', error.message);\n  } finally {\n    hidePageLoader();\n    document.getElementById('content').classList.remove('is-hidden');\n  }\n});\n\n// Змінна для збереження поточного пошукового запиту\nlet currentQuery = '';\n\n// Змінна для відстеження поточної сторінки при пагінації\nlet currentPage = 1;\n\n// Кількість продуктів, які будуть завантажені на одну сторінку\nconst IMAGES_PER_PAGE = 12;\n\n \n\n// Додаємо обробник події на категорії\nrefs.categoriesListEl.addEventListener('click', async (e) => {\n    if (e.target === e.currentTarget) return\n    // Отримуємо ID категорії з атрибута data-id\n    const categoryName = e.target.dataset.category;\n\n    // Якщо ID не вказано — виходимо з функції\n    if (!categoryName) return;\n\n  // Додаємо/знімаємо клас активної кнопки\n    const categoryButtons = refs.categoriesListEl.querySelectorAll('.categories__btn');\n    categoryButtons.forEach(btn => btn.classList.remove('categories__btn--active'));\n    e.target.classList.add('categories__btn--active');\n    // Скидаємо номер сторінки на 1\n    currentPage = 1;\n\n    // Якщо запит валідний:\n    clearMarkupProducts();  \n    hideLoadMoreBtn();\n    showLoader();\n    try {\n        const products = await fetchProductsByCategory(categoryName);\n\n        if (products.length === 0) {\n            iziToast.error({\n                title: 'Error',\n                message: 'No products found in this category.',\n                position: 'topCenter',\n            });\n            hideLoader();\n            return;\n        }\n            cards.length = 0;\n            cards.push(...products);\n            saveCardsToStorage();\n\n\n         // Якщо продукти знайдені — створюємо HTML-розмітку\n        const markup = createMarkupProducts(products);\n\n        // Вставляємо згенеровану розмітку в DOM\n        refs.productsListEl.insertAdjacentHTML('beforeend', markup);\n\n        // Показуємо кнопку \"Load More\" для завантаження наступної сторінки\n        showLoadMoreBtn();\n\n    } catch (error) {\n        console.error('Error fetching products:', error.message);\n    } finally {\n        hideLoader(); // Ховаємо анімацію завантаження\n    }\n});\n// Обробник події submit форми пошуку\nrefs.formEl.addEventListener('submit', async (e) => {\n  e.preventDefault(); // Скасовуємо перезавантаження сторінки при відправці форми\n\n  const query = refs.inputEl.value.trim(); // Отримуємо та обрізаємо значення з поля вводу\n\n  // Якщо поле порожнє — показуємо повідомлення про помилку\n  if (!query) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please enter a search query.',\n      position: 'topCenter',\n    });\n    return; // Вихід із функції\n  }\n\n  clearMarkupProducts(); // Очищаємо попередні результати на сторінці\n  hideLoadMoreBtn();     // Приховуємо кнопку \"Load More\"\n  showLoader();          // Показуємо анімацію завантаження (спінер)\n\n  try {\n    // Шукаємо товари за введеним запитом\n    const products = await searchProductsByName(query);\n\n   \n    // Якщо товари не знайдено — показуємо блок not-found\n    if (!products || products.length === 0) {\n      showNotFoundMessage();\n      return;\n    }\n\n    // Якщо знайдено — ховаємо блок not-found\n    hideNotFoundMessage();\n\n    // Очищаємо масив карток і додаємо нові\n    cards.length = 0;\n    cards.push(...products);\n    saveCardsToStorage(); // Зберігаємо картки у localStorage\n\n    // Створюємо HTML-розмітку з отриманих товарів\n    const markup = createMarkupProducts(products);\n\n    // Вставляємо розмітку в DOM (в кінець списку)\n    refs.productsListEl.insertAdjacentHTML('beforeend', markup);\n\n    // Показуємо кнопку \"Load More\"\n    showLoadMoreBtn();\n\n  } catch (error) {\n    // Якщо сталася помилка — виводимо її в консоль і показуємо повідомлення\n    console.error('Search error:', error.message);\n    iziToast.error({\n      title: 'Error',\n      message: 'Something went wrong. Please try again.',\n      position: 'topCenter',\n    });\n  } finally {\n    // Завжди ховаємо лоадер і очищаємо поле вводу\n    hideLoader();\n    refs.formEl.reset();\n  }\n});\n\n// Додаємо обробник події на кнопку \"Load More\"\nrefs.loadMoreBtn.addEventListener('click', async () => {\n  // Збільшуємо номер сторінки — це дозволяє завантажити наступну \"партію\" товарів\n  currentPage += 1;\n\n  // Показуємо індикатор завантаження\n    showLoader();\n    hideLoadMoreBtn();   \n\n  // Встановлюємо мінімальний час показу лоадера (2 секунди)\n  const startTime = Date.now();\n  const MIN_LOADER_TIME = 2000;\n\n  try {\n    // Отримуємо продукти за поточним запитом і сторінкою\n    const products = await fetchAllProducts(currentQuery, currentPage);\n\n    // Якщо нових продуктів немає, показуємо повідомлення і ховаємо кнопку\n    if (products.length === 0) {\n      iziToast.error({\n        title: 'Error',\n        message: 'No more products found.',\n        position: 'topCenter',\n      });\n      hideLoadMoreBtn();\n      return;\n    }\n\n    // Рендеримо продукти до DOM (ця функція має вставити нову порцію продуктів)\n    addLoadMoreProducts(products);\n\n  } catch (error) {\n    // Якщо сталася помилка — виводимо повідомлення\n    iziToast.error({\n      title: 'Error',\n      message: 'Failed to load products.',\n      position: 'topCenter',\n    });\n  } finally {\n    // Забезпечуємо мінімальний час відображення лоадера\n    const elapsedTime = Date.now() - startTime;\n    const remainingTime = MIN_LOADER_TIME - elapsedTime;\n\n    if (remainingTime > 0) {\n        setTimeout(() => {\n        showLoadMoreBtn();\n        hideLoader();\n      }, remainingTime);\n    } else {\n        hideLoader();\n        showLoadMoreBtn();\n    }\n  }\n});\n\n// Додаємо обробник події на кнопку очищення пошуку\nrefs.clearSearchBtnEl.addEventListener('click', () => {\n    // Очищаємо поле вводу\n    refs.inputEl.value = '';\n\n    // // Очищаємо список продуктів\n    // clearMarkupProducts();\n\n    // // Ховаємо кнопку \"Load More\"\n    // hideLoadMoreBtn();\n\n    // Скидаємо номер сторінки на 1\n    currentPage = 1;\n\n    // Показуємо повідомлення про очищення пошуку\n    iziToast.info({\n        title: 'Info',\n        message: 'Search cleared.',\n        position: 'topCenter',\n    });\n});\n\n// Додаємо обробник події для відкриття модального вікна з деталями продукту\nrefs.productsListEl.addEventListener('click', async (e) => {\n    const productCard = e.target.closest('.products__item');\n    if (!productCard) return;\n\n    const productId = productCard.dataset.id;\n    if (!productId) return;\n\n    try {\n        showLoader();\n        const product = await fetchProductById(productId);\n        openModal(product); // Показ модального вікна з деталями\n    } catch (error) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Failed to load product details.',\n            position: 'topCenter',\n        });\n        console.error('Error loading product:', error);\n    } finally {\n        hideLoader();\n    }\n});\n\n"],"names":["showPageLoader","updateCartCount","resolve","initPage","addCardClickListener","error","hidePageLoader","currentQuery","currentPage","refs","e","categoryName","btn","clearMarkupProducts","hideLoadMoreBtn","showLoader","products","fetchProductsByCategory","iziToast","hideLoader","cards","saveCardsToStorage","markup","createMarkupProducts","showLoadMoreBtn","query","searchProductsByName","showNotFoundMessage","hideNotFoundMessage","startTime","MIN_LOADER_TIME","fetchAllProducts","addLoadMoreProducts","elapsedTime","remainingTime","productCard","productId","product","fetchProductById","openModal"],"mappings":"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"}